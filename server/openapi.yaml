openapi: 3.0.0
info:
  title: Supervisor Server API
  version: "1.0"
components:
  schemas:
    Task:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
          nullable: true
        runner:
          type: string
        creator:
          type: string
        last_update:
          type: string
          format: date-time
        created_date:
          type: string
          format: date-time
        queue:
          type: array
          items:
            type: string
        state:
          type: integer
          minimum: 0
          maximum: 2
    User:
      type: object
      properties:
        id:
          type: string
        key:
          type: string
        url:
          type: string
          format: uri
    Credentials:
      type: object
      properties:
        id:
          type: string
        key:
          type: string
paths:
  /tasks:
    post:
      summary: Create a new task
      operationId: run.create_task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                  nullable: true
                credentials:
                  $ref: '#/components/schemas/Credentials'
      responses:
        '201':
          description: Task created
    get:
      summary: Get tasks
      operationId: run.read_tasks
      parameters:
        - name: pattern
          schema:
            type: string
          in: query
        - name: limit
          schema:
            type: integer
          in: query
        - name: offset
          schema:
            type: integer
          in: query
      responses:
        '200':
          description: List of tasks
  /tasks/{name}:
    get:
      summary: Get information about a task
      operationId: run.read_task
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Task information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
    put:
      summary: Update data of a task
      operationId: run.update_task
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: string
                credentials:
                  $ref: '#/components/schemas/Credentials'
      responses:
        '200':
          description: Task updated
    delete:
      summary: Delete a task
      operationId: run.delete_task
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        '204':
          description: Task deleted
  /tasks/{name}/queue:
    get:
      summary: Get IDs of the queue of a task
      operationId: run.read_queue
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: start
          in: query
          schema:
            type: integer
        - name: end
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Queue IDs
    put:
      summary: Join the queue
      operationId: run.join_queue
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        '200':
          description: Joined queue
        '409':
          description: User is already in the queue
    delete:
      summary: Dequeue yourself from the queue
      operationId: run.leave_queue
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        '204':
          description: Dequeued
        '404':
          description: User is not in the queue
  /users/{name}:
    post:
      summary: Create a new user
      operationId: run.create_user
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                link:
                  type: string
      responses:
        '200':
          description: User created
          content:
            application/json:
              schema:
                type: object
                properties:
                  key:
                    type: string
        '409':
          description: User with that name already exists
